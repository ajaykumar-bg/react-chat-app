{"version":3,"file":"static/js/608.054813e9.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Chat.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/icons-material/esm/Message.js","../node_modules/@mui/icons-material/esm/People.js","features/Landing.jsx","../node_modules/@mui/icons-material/esm/Videocam.js","../node_modules/@mui/icons-material/esm/Wifi.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2M6 9h12v2H6zm8 5H6v-2h8zm4-6H6V6h12z\"\n}), 'Chat');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root'\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-2 12H6v-2h12zm0-3H6V9h12zm0-3H6V6h12z\"\n}), 'Message');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5s-3 1.34-3 3 1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@mui/material';\r\nimport {\r\n  Chat as ChatIcon,\r\n  Message as MessageIcon,\r\n  People as PeopleIcon,\r\n  Wifi as WifiIcon,\r\n  Phone as PhoneIcon,\r\n  Videocam as VideocamIcon,\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const Landing = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const features = [\r\n    {\r\n      icon: <MessageIcon color='primary' />,\r\n      title: 'Real-time Messaging',\r\n      description: 'Send and receive messages instantly with WebSocket support',\r\n    },\r\n    {\r\n      icon: <PeopleIcon color='primary' />,\r\n      title: 'User Management',\r\n      description: 'See online status, typing indicators, and user profiles',\r\n    },\r\n    {\r\n      icon: <WifiIcon color='primary' />,\r\n      title: 'Connection Status',\r\n      description: 'Always know your connection status with visual indicators',\r\n    },\r\n    {\r\n      icon: <PhoneIcon color='primary' />,\r\n      title: 'Voice & Video',\r\n      description: 'Ready for voice and video calling features (coming soon)',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ textAlign: 'center', mb: 4 }}>\r\n        <Typography variant='h3' component='h1' gutterBottom>\r\n          Welcome to ChatApp\r\n        </Typography>\r\n        <Typography variant='h6' color='textSecondary' paragraph>\r\n          A modern WhatsApp-like chat application built with React and\r\n          Material-UI\r\n        </Typography>\r\n        <Box sx={{ mt: 3 }}>\r\n          <Button\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<ChatIcon />}\r\n            onClick={() => navigate('/chat')}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Start Chatting\r\n          </Button>\r\n          <Chip\r\n            label='WebSocket Enabled'\r\n            color='success'\r\n            icon={<WifiIcon />}\r\n            variant='outlined'\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        {features.map((feature, index) => (\r\n          <Grid size={{ xs: 12, sm: 6, md: 3 }} key={index}>\r\n            <Card\r\n              elevation={2}\r\n              sx={{\r\n                height: '100%',\r\n                transition: 'transform 0.2s',\r\n                '&:hover': {\r\n                  transform: 'translateY(-4px)',\r\n                },\r\n              }}\r\n            >\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Box sx={{ mb: 2 }}>{feature.icon}</Box>\r\n                <Typography variant='h6' gutterBottom>\r\n                  {feature.title}\r\n                </Typography>\r\n                <Typography variant='body2' color='textSecondary'>\r\n                  {feature.description}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Card elevation={2}>\r\n        <CardContent>\r\n          <Typography variant='h5' gutterBottom>\r\n            Chat Features\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Typography variant='h6' gutterBottom>\r\n                Current Features\r\n              </Typography>\r\n              <List dense>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <MessageIcon fontSize='small' />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary='Real-time messaging'\r\n                    secondary='Send and receive messages instantly'\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <PeopleIcon fontSize='small' />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary='User status indicators'\r\n                    secondary='Online, offline, and away status'\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <WifiIcon fontSize='small' />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary='Connection monitoring'\r\n                    secondary='Real-time connection status updates'\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n            <Grid size={{ xs: 12, md: 6 }}>\r\n              <Typography variant='h6' gutterBottom>\r\n                Coming Soon\r\n              </Typography>\r\n              <List dense>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <PhoneIcon fontSize='small' />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary='Voice calling'\r\n                    secondary='High-quality voice calls'\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <VideocamIcon fontSize='small' />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary='Video calling'\r\n                    secondary='Face-to-face conversations'\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <MessageIcon fontSize='small' />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary='File sharing'\r\n                    secondary='Share documents, images, and more'\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11z\"\n}), 'Videocam');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m1 9 2 2c4.97-4.97 13.03-4.97 18 0l2-2C16.93 2.93 7.08 2.93 1 9m8 8 3 3 3-3c-1.65-1.66-4.34-1.66-6 0m-4-4 2 2c2.76-2.76 7.24-2.76 10 0l2-2C15.14 9.14 8.87 9.14 5 13\"\n}), 'Wifi');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root'\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;"],"names":["createSvgIcon","_jsx","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overflow","React","inProps","ref","props","useDefaultProps","className","raised","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","root","useUtilityClasses","clsx","elevation","undefined","Landing","navigate","useNavigate","features","icon","MessageIcon","color","title","description","PeopleIcon","WifiIcon","PhoneIcon","_jsxs","Box","sx","p","children","textAlign","mb","Typography","variant","component","gutterBottom","paragraph","mt","Button","size","startIcon","ChatIcon","onClick","mr","Chip","label","Grid","container","spacing","map","feature","index","xs","sm","md","Card","height","transition","transform","CardContent","List","dense","ListItem","ListItemIcon","fontSize","ListItemText","primary","secondary","VideocamIcon","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","as"],"sourceRoot":""}